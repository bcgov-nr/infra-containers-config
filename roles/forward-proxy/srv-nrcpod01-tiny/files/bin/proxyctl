#!/bin/sh
#
# proxyctl
#
# Start, stop, or reload tinyproxy
#
# For configuration information:
#       man /sw_ux/tinyproxy/current/share/man/man5/tinyproxy.conf.5
# For process information:
#       man /sw_ux/tinyproxy/current/share/man/man8/tinyproxy.8
# ------------------------------------------------------------------

TPDIR=/sw_ux/tinyproxy/current
LOG=$TPDIR/var/log/tinyproxy/tinyproxy.log

function usage {
  $TPDIR/bin/tinyproxy -v
  echo "Usage: $0 [ start | stop | reload ]"
  exit 1
}

function start {
  $TPDIR/bin/tinyproxy -c $TPDIR/etc/tinyproxy/tinyproxy.conf
  sleep 1
  if [ -f $LOG ]; then
    if [ `stat -c %a $LOG` != '640' ]; then chmod 640 $LOG; fi
  fi
  echo "tinyproxy is started"
}

function stop {
  # See if tinyproxy is running
  # ---------------------------
  if /usr/bin/pgrep tinyproxy 2>&1 > /dev/null; then

    # If there is a PID file, use that to kill the processes
    # ------------------------------------------------------
    if [ -f $TPDIR/var/run/tinyproxy/tinyproxy.pid ]; then
      kill `cat $TPDIR/var/run/tinyproxy/tinyproxy.pid` 2>&1 > /dev/null
      if [ "$?" != "0" ]; then
        # Only use -9 if a regular kill doesn't do the job
        # ------------------------------------------------
        kill -9 `cat $TPDIR/var/run/tinyproxy/tinyproxy.pid` 2>&1 > /dev/null
      fi
    else
      # If it was running without a PID file, use pkill.
      # Innocent processes might be affected (e.g., vi tinyproxy.conf)
      # --------------------------------------------------------------
      /usr/bin/pkill -9 tinyproxy
    fi
    echo "tinyproxy is stopped"
  else
    echo "tinyproxy is already stopped"
  fi
}

function reload {
  stop
  start
}

if [ $# -ne 1 ]; then
  usage
else
  case $1 in
    start)  start;;
    stop)   stop;;
    reload) reload;;
    *)      usage;;
  esac
fi

exit 0

